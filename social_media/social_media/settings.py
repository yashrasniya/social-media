"""
Django settings for social_media project.

Generated by 'django-admin startproject' using Django 3.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'f4o9e^6yh1+1qwj$$^0ugl9qg(8_o0g4(k3wuawzkw)lu0&q#i'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# handler404 = 'home_page.views.error_404'

ALLOWED_HOSTS = ['localhost', '127.0.0.1']
# ALLOWED_HOSTS=['*']
# CORS_ORIGIN_WHITELIST = (
#        'localhost:3000'
# )


# CORS_ORIGIN_ALLOW_ALL = True
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_ALL_ORIGINS = True  # any web side have access to my api
CORS_URLS_REGEX = r'^/api/.*$'

# For MEDIA FOLDER
# MEDIA = WHERE ALL PHOTOS WILL BE SAVED
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'
# mex length for post description
MAX_LENGTH = 200
# Application definition
POST_ACTION_OPTION = ["like", "unlike"]
PHOTO_SIZE = 600
INSTALLED_APPS = [

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    # install apps
    'corsheaders',
    'rest_framework',
    # internal apps
    'home_page',
    'oauth_app',
    # for auth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    #rest api
    'rest_framework.authtoken',

]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend'
]

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        }
    }
}
SITE_ID = 3

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'social_media.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR, 'template'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'social_media.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
LOGIN_URL = "login"

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),

]

STATIC_ROOT = os.path.join(BASE_DIR, "static-root")

DEFAULT_RENDERER_CLASSES = ['rest_framework.renderers.JSONRenderer']

REST_FRAMEWORK_authentication = [
            'rest_framework.authentication.SessionAuthentication',
            'rest_framework.authentication.TokenAuthentication',
]
if DEBUG:
    DEFAULT_RENDERER_CLASSES.append('rest_framework.renderers.BrowsableAPIRenderer')
    DEFAULT_RENDERER_CLASSES.append('social_media.dev.authentication.Authentication')


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': REST_FRAMEWORK_authentication,
    'DEFAULT_RENDERER_CLASSES': DEFAULT_RENDERER_CLASSES
    # ,
    # 'DEFAULT_PERMISSION_CLASSES': (
    #     'rest_framework.permissions.IsAuthenticated',)

}

firebaseConfig = {

  "apiKey": "AIzaSyD0ijz05NWwTJ9Xrpc1T57LnU4NbvB0mas",

  "authDomain": "test-e3512.firebaseapp.com",

  "databaseURL": "https://test-e3512-default-rtdb.firebaseio.com",

  "projectId": "test-e3512",

  "storageBucket": "test-e3512.appspot.com",

  "messagingSenderId": "549026914943",

  "appId": "1:549026914943:web:fe690601dd0c6fa87f154a",

  "measurementId": "G-C2XCEST5JJ"

}
user_auth_token= 'eb5de29c03ef6421956075413e5ecc666dcc1d7c'